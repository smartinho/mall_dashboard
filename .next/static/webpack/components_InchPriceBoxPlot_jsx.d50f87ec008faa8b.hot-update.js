"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("components_InchPriceBoxPlot_jsx",{

/***/ "./components/InchPriceBoxPlot.jsx":
/*!*****************************************!*\
  !*** ./components/InchPriceBoxPlot.jsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ InchPriceBoxPlot; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dynamic */ \"./node_modules/next/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_2__);\n// components/InchPriceBoxPlot.jsx\n\nvar _s = $RefreshSig$();\n\n\n// import Plot from 'react-plotly.js';\nconst Plot = next_dynamic__WEBPACK_IMPORTED_MODULE_2___default()(()=>__webpack_require__.e(/*! import() */ \"node_modules_react-plotly_js_react-plotly_js\").then(__webpack_require__.bind(__webpack_require__, /*! react-plotly.js */ \"./node_modules/react-plotly.js/react-plotly.js\")), {\n    loadableGenerated: {\n        modules: [\n            \"..\\\\components\\\\InchPriceBoxPlot.jsx -> \" + \"react-plotly.js\"\n        ]\n    },\n    ssr: false\n});\n_c = Plot;\nfunction InchPriceBoxPlot(param) {\n    let { data, width = \"100%\", height = \"100%\" } = param;\n    _s();\n    // 1) No data guard\n    if (!data || data.length === 0) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            style: {\n                padding: 20,\n                textAlign: \"center\"\n            },\n            children: \"No data\"\n        }, void 0, false, {\n            fileName: \"D:\\\\mall_dashboard\\\\components\\\\InchPriceBoxPlot.jsx\",\n            lineNumber: 16,\n            columnNumber: 7\n        }, this);\n    }\n    // 2) Column names\n    const inchKey = \"Screen Size\";\n    const priceKey = \"Price[$]\";\n    // 3) Group prices by inch\n    const groups = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const map = {};\n        data.forEach((row)=>{\n            const inch = parseFloat(row[inchKey]);\n            const price = parseFloat(typeof row[priceKey] === \"string\" ? row[priceKey].replace(/[^0-9.]/g, \"\") : row[priceKey]);\n            if (isNaN(inch) || isNaN(price)) return;\n            map[inch] = map[inch] || [];\n            map[inch].push(price);\n        });\n        return Object.entries(map).map((param)=>{\n            let [inch, prices] = param;\n            return {\n                inchLabel: \"\".concat(inch, '\"'),\n                prices\n            };\n        }).sort((a, b)=>parseFloat(a.inchLabel) - parseFloat(b.inchLabel));\n    }, [\n        data\n    ]);\n    // 4) Build one trace per inch\n    const traces = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>groups.map((param)=>{\n            let { inchLabel, prices } = param;\n            return {\n                type: \"box\",\n                orientation: \"h\",\n                name: inchLabel,\n                x: prices,\n                y: Array(prices.length).fill(inchLabel),\n                boxpoints: \"outliers\",\n                marker: {\n                    opacity: 0.6\n                },\n                line: {\n                    width: 1\n                },\n                hovertemplate: \"<b>\".concat(inchLabel, \"</b><br>Price: %{x}<extra></extra>\")\n            };\n        }), [\n        groups\n    ]);\n    // 5) Responsive layout with margins\n    const layout = {\n        autosize: true,\n        margin: {\n            l: 0,\n            r: 0,\n            t: 0,\n            b: 20\n        },\n        xaxis: {\n            title: \"Price [$]\",\n            automargin: true\n        },\n        yaxis: {\n            title: \"Screen Size (Inch)\",\n            automargin: true\n        },\n        showlegend: false,\n        hovermode: \"closest\"\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            width,\n            height\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Plot, {\n            data: traces,\n            layout: layout,\n            useResizeHandler: true,\n            style: {\n                width: \"95%\",\n                height: \"100%\"\n            },\n            config: {\n                displayModeBar: false\n            }\n        }, void 0, false, {\n            fileName: \"D:\\\\mall_dashboard\\\\components\\\\InchPriceBoxPlot.jsx\",\n            lineNumber: 75,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"D:\\\\mall_dashboard\\\\components\\\\InchPriceBoxPlot.jsx\",\n        lineNumber: 74,\n        columnNumber: 5\n    }, this);\n}\n_s(InchPriceBoxPlot, \"vpWbEIzYtCiFAAxxMrw+sTCNnvQ=\");\n_c1 = InchPriceBoxPlot;\nvar _c, _c1;\n$RefreshReg$(_c, \"Plot\");\n$RefreshReg$(_c1, \"InchPriceBoxPlot\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0luY2hQcmljZUJveFBsb3QuanN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxrQ0FBa0M7OztBQUNLO0FBQ0o7QUFDbkMsc0NBQXNDO0FBRXRDLE1BQU1HLE9BQU9ELG1EQUFPQSxDQUFDLElBQU0sa05BQU87Ozs7OztJQUFzQkUsS0FBSzs7S0FBdkREO0FBRVMsU0FBU0UsaUJBQWlCLEtBSXhDO1FBSndDLEVBQ3ZDQyxJQUFJLEVBQ0pDLFFBQVEsTUFBTSxFQUNkQyxTQUFTLE1BQU0sRUFDaEIsR0FKd0M7O0lBS3ZDLG1CQUFtQjtJQUNuQixJQUFJLENBQUNGLFFBQVFBLEtBQUtHLE1BQU0sS0FBSyxHQUFHO1FBQzlCLHFCQUNFLDhEQUFDQztZQUFJQyxPQUFPO2dCQUFFQyxTQUFTO2dCQUFJQyxXQUFXO1lBQVM7c0JBQUc7Ozs7OztJQUl0RDtJQUVBLGtCQUFrQjtJQUNsQixNQUFNQyxVQUFVO0lBQ2hCLE1BQU1DLFdBQVc7SUFFakIsMEJBQTBCO0lBQzFCLE1BQU1DLFNBQVNmLDhDQUFPQSxDQUFDO1FBQ3JCLE1BQU1nQixNQUFNLENBQUM7UUFDYlgsS0FBS1ksT0FBTyxDQUFDQyxDQUFBQTtZQUNYLE1BQU1DLE9BQU9DLFdBQVdGLEdBQUcsQ0FBQ0wsUUFBUTtZQUNwQyxNQUFNUSxRQUFRRCxXQUNaLE9BQU9GLEdBQUcsQ0FBQ0osU0FBUyxLQUFLLFdBQ3JCSSxHQUFHLENBQUNKLFNBQVMsQ0FBQ1EsT0FBTyxDQUFDLFlBQVksTUFDbENKLEdBQUcsQ0FBQ0osU0FBUztZQUVuQixJQUFJUyxNQUFNSixTQUFTSSxNQUFNRixRQUFRO1lBQ2pDTCxHQUFHLENBQUNHLEtBQUssR0FBR0gsR0FBRyxDQUFDRyxLQUFLLElBQUksRUFBRTtZQUMzQkgsR0FBRyxDQUFDRyxLQUFLLENBQUNLLElBQUksQ0FBQ0g7UUFDakI7UUFDQSxPQUFPSSxPQUFPQyxPQUFPLENBQUNWLEtBQ25CQSxHQUFHLENBQUM7Z0JBQUMsQ0FBQ0csTUFBTVEsT0FBTzttQkFBTTtnQkFBRUMsV0FBVyxHQUFRLE9BQUxULE1BQUs7Z0JBQUlRO1lBQU87V0FDekRFLElBQUksQ0FBQyxDQUFDQyxHQUFHQyxJQUFNWCxXQUFXVSxFQUFFRixTQUFTLElBQUlSLFdBQVdXLEVBQUVILFNBQVM7SUFDcEUsR0FBRztRQUFDdkI7S0FBSztJQUVULDhCQUE4QjtJQUM5QixNQUFNMkIsU0FBU2hDLDhDQUFPQSxDQUNwQixJQUNFZSxPQUFPQyxHQUFHLENBQUM7Z0JBQUMsRUFBRVksU0FBUyxFQUFFRCxNQUFNLEVBQUU7bUJBQU07Z0JBQ3JDTSxNQUFNO2dCQUNOQyxhQUFhO2dCQUNiQyxNQUFNUDtnQkFDTlEsR0FBR1Q7Z0JBQ0hVLEdBQUdDLE1BQU1YLE9BQU9uQixNQUFNLEVBQUUrQixJQUFJLENBQUNYO2dCQUM3QlksV0FBVztnQkFDWEMsUUFBUTtvQkFBRUMsU0FBUztnQkFBSTtnQkFDdkJDLE1BQU07b0JBQUVyQyxPQUFPO2dCQUFFO2dCQUNqQnNDLGVBQ0UsTUFBZ0IsT0FBVmhCLFdBQVU7WUFDcEI7WUFDRjtRQUFDYjtLQUFPO0lBR1Ysb0NBQW9DO0lBQ3BDLE1BQU04QixTQUFTO1FBQ2JDLFVBQVU7UUFDVkMsUUFBUTtZQUFFQyxHQUFHO1lBQUdDLEdBQUc7WUFBR0MsR0FBRztZQUFHbkIsR0FBRztRQUFHO1FBQ2xDb0IsT0FBTztZQUFFQyxPQUFPO1lBQWFDLFlBQVk7UUFBSztRQUM5Q0MsT0FBTztZQUFFRixPQUFPO1lBQXNCQyxZQUFZO1FBQUs7UUFDdkRFLFlBQVk7UUFDWkMsV0FBVztJQUNiO0lBRUEscUJBQ0UsOERBQUMvQztRQUFJQyxPQUFPO1lBQUVKO1lBQU9DO1FBQU87a0JBQzFCLDRFQUFDTDtZQUNDRyxNQUFNMkI7WUFDTmEsUUFBUUE7WUFDUlksZ0JBQWdCO1lBQ2hCL0MsT0FBTztnQkFBRUosT0FBTztnQkFBT0MsUUFBUTtZQUFPO1lBQ3RDbUQsUUFBUTtnQkFBRUMsZ0JBQWdCO1lBQU07Ozs7Ozs7Ozs7O0FBSXhDO0dBNUV3QnZEO01BQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvSW5jaFByaWNlQm94UGxvdC5qc3g/NmZiMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjb21wb25lbnRzL0luY2hQcmljZUJveFBsb3QuanN4XHJcbmltcG9ydCBSZWFjdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgZHluYW1pYyBmcm9tICduZXh0L2R5bmFtaWMnO1xyXG4vLyBpbXBvcnQgUGxvdCBmcm9tICdyZWFjdC1wbG90bHkuanMnO1xyXG5cclxuY29uc3QgUGxvdCA9IGR5bmFtaWMoKCkgPT4gaW1wb3J0KCdyZWFjdC1wbG90bHkuanMnKSwgeyBzc3I6IGZhbHNlIH0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5jaFByaWNlQm94UGxvdCh7XHJcbiAgZGF0YSxcclxuICB3aWR0aCA9ICcxMDAlJyxcclxuICBoZWlnaHQgPSAnMTAwJScsXHJcbn0pIHtcclxuICAvLyAxKSBObyBkYXRhIGd1YXJkXHJcbiAgaWYgKCFkYXRhIHx8IGRhdGEubGVuZ3RoID09PSAwKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2IHN0eWxlPXt7IHBhZGRpbmc6IDIwLCB0ZXh0QWxpZ246ICdjZW50ZXInIH19PlxyXG4gICAgICAgIE5vIGRhdGFcclxuICAgICAgPC9kaXY+XHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgLy8gMikgQ29sdW1uIG5hbWVzXHJcbiAgY29uc3QgaW5jaEtleSA9ICdTY3JlZW4gU2l6ZSc7XHJcbiAgY29uc3QgcHJpY2VLZXkgPSAnUHJpY2VbJF0nO1xyXG5cclxuICAvLyAzKSBHcm91cCBwcmljZXMgYnkgaW5jaFxyXG4gIGNvbnN0IGdyb3VwcyA9IHVzZU1lbW8oKCkgPT4ge1xyXG4gICAgY29uc3QgbWFwID0ge307XHJcbiAgICBkYXRhLmZvckVhY2gocm93ID0+IHtcclxuICAgICAgY29uc3QgaW5jaCA9IHBhcnNlRmxvYXQocm93W2luY2hLZXldKTtcclxuICAgICAgY29uc3QgcHJpY2UgPSBwYXJzZUZsb2F0KFxyXG4gICAgICAgIHR5cGVvZiByb3dbcHJpY2VLZXldID09PSAnc3RyaW5nJ1xyXG4gICAgICAgICAgPyByb3dbcHJpY2VLZXldLnJlcGxhY2UoL1teMC05Ll0vZywgJycpXHJcbiAgICAgICAgICA6IHJvd1twcmljZUtleV1cclxuICAgICAgKTtcclxuICAgICAgaWYgKGlzTmFOKGluY2gpIHx8IGlzTmFOKHByaWNlKSkgcmV0dXJuO1xyXG4gICAgICBtYXBbaW5jaF0gPSBtYXBbaW5jaF0gfHwgW107XHJcbiAgICAgIG1hcFtpbmNoXS5wdXNoKHByaWNlKTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKG1hcClcclxuICAgICAgLm1hcCgoW2luY2gsIHByaWNlc10pID0+ICh7IGluY2hMYWJlbDogYCR7aW5jaH1cImAsIHByaWNlcyB9KSlcclxuICAgICAgLnNvcnQoKGEsIGIpID0+IHBhcnNlRmxvYXQoYS5pbmNoTGFiZWwpIC0gcGFyc2VGbG9hdChiLmluY2hMYWJlbCkpO1xyXG4gIH0sIFtkYXRhXSk7XHJcblxyXG4gIC8vIDQpIEJ1aWxkIG9uZSB0cmFjZSBwZXIgaW5jaFxyXG4gIGNvbnN0IHRyYWNlcyA9IHVzZU1lbW8oXHJcbiAgICAoKSA9PlxyXG4gICAgICBncm91cHMubWFwKCh7IGluY2hMYWJlbCwgcHJpY2VzIH0pID0+ICh7XHJcbiAgICAgICAgdHlwZTogJ2JveCcsXHJcbiAgICAgICAgb3JpZW50YXRpb246ICdoJyxcclxuICAgICAgICBuYW1lOiBpbmNoTGFiZWwsXHJcbiAgICAgICAgeDogcHJpY2VzLFxyXG4gICAgICAgIHk6IEFycmF5KHByaWNlcy5sZW5ndGgpLmZpbGwoaW5jaExhYmVsKSxcclxuICAgICAgICBib3hwb2ludHM6ICdvdXRsaWVycycsXHJcbiAgICAgICAgbWFya2VyOiB7IG9wYWNpdHk6IDAuNiB9LFxyXG4gICAgICAgIGxpbmU6IHsgd2lkdGg6IDEgfSxcclxuICAgICAgICBob3ZlcnRlbXBsYXRlOlxyXG4gICAgICAgICAgYDxiPiR7aW5jaExhYmVsfTwvYj48YnI+UHJpY2U6ICV7eH08ZXh0cmE+PC9leHRyYT5gLFxyXG4gICAgICB9KSksXHJcbiAgICBbZ3JvdXBzXVxyXG4gICk7XHJcblxyXG4gIC8vIDUpIFJlc3BvbnNpdmUgbGF5b3V0IHdpdGggbWFyZ2luc1xyXG4gIGNvbnN0IGxheW91dCA9IHtcclxuICAgIGF1dG9zaXplOiB0cnVlLFxyXG4gICAgbWFyZ2luOiB7IGw6IDAsIHI6IDAsIHQ6IDAsIGI6IDIwIH0sXHJcbiAgICB4YXhpczogeyB0aXRsZTogJ1ByaWNlIFskXScsIGF1dG9tYXJnaW46IHRydWUgfSxcclxuICAgIHlheGlzOiB7IHRpdGxlOiAnU2NyZWVuIFNpemUgKEluY2gpJywgYXV0b21hcmdpbjogdHJ1ZSB9LFxyXG4gICAgc2hvd2xlZ2VuZDogZmFsc2UsXHJcbiAgICBob3Zlcm1vZGU6ICdjbG9zZXN0JyxcclxuICB9O1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBzdHlsZT17eyB3aWR0aCwgaGVpZ2h0IH19PlxyXG4gICAgICA8UGxvdFxyXG4gICAgICAgIGRhdGE9e3RyYWNlc31cclxuICAgICAgICBsYXlvdXQ9e2xheW91dH1cclxuICAgICAgICB1c2VSZXNpemVIYW5kbGVyXHJcbiAgICAgICAgc3R5bGU9e3sgd2lkdGg6ICc5NSUnLCBoZWlnaHQ6ICcxMDAlJyB9fVxyXG4gICAgICAgIGNvbmZpZz17eyBkaXNwbGF5TW9kZUJhcjogZmFsc2UgfX1cclxuICAgICAgLz5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn1cclxuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlTWVtbyIsImR5bmFtaWMiLCJQbG90Iiwic3NyIiwiSW5jaFByaWNlQm94UGxvdCIsImRhdGEiLCJ3aWR0aCIsImhlaWdodCIsImxlbmd0aCIsImRpdiIsInN0eWxlIiwicGFkZGluZyIsInRleHRBbGlnbiIsImluY2hLZXkiLCJwcmljZUtleSIsImdyb3VwcyIsIm1hcCIsImZvckVhY2giLCJyb3ciLCJpbmNoIiwicGFyc2VGbG9hdCIsInByaWNlIiwicmVwbGFjZSIsImlzTmFOIiwicHVzaCIsIk9iamVjdCIsImVudHJpZXMiLCJwcmljZXMiLCJpbmNoTGFiZWwiLCJzb3J0IiwiYSIsImIiLCJ0cmFjZXMiLCJ0eXBlIiwib3JpZW50YXRpb24iLCJuYW1lIiwieCIsInkiLCJBcnJheSIsImZpbGwiLCJib3hwb2ludHMiLCJtYXJrZXIiLCJvcGFjaXR5IiwibGluZSIsImhvdmVydGVtcGxhdGUiLCJsYXlvdXQiLCJhdXRvc2l6ZSIsIm1hcmdpbiIsImwiLCJyIiwidCIsInhheGlzIiwidGl0bGUiLCJhdXRvbWFyZ2luIiwieWF4aXMiLCJzaG93bGVnZW5kIiwiaG92ZXJtb2RlIiwidXNlUmVzaXplSGFuZGxlciIsImNvbmZpZyIsImRpc3BsYXlNb2RlQmFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/InchPriceBoxPlot.jsx\n"));

/***/ })

});